<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Usuários - AeroSwift</title>
    <link rel="stylesheet" href="/css/users.css">
    <link rel="shortcut icon" href="/images/favicon.svg" type="image/x-icon">
</head>
<body>
    <header>
        <div class="logo-container">
            <img src="/images/marca.svg" alt="marca" class="logo">
        </div>

        <nav>
            <ul>
                <li><a href="/gestor/services">SERVIÇOS</a></li>
                <li><a href="/gestor/farm">FAZENDAS</a></li>
                <li>
                    <button class="perfil-btn" id="openModalBtn">
                        <img src="/images/perfil.svg" alt="Perfil" class="perfil-icon">
                    </button>
                </li>
            </ul>
        </nav>

        <div id="perfilModal" class="modal">
            <div class="modal-content">
                <ul>
                    <li>
                        <button class="header-button" type="button" onclick="window.location.href='/gestor/user'">
                            <img src="/images/newuser.svg" alt="Novo Usuário" class="icon"> Novo usuário
                        </button>
                    </li>
                    <li>
                        <button class="header-button" type="button" onclick="window.location.href='/gestor/login'">
                            <img src="/images/logout.svg" alt="Logout" class="icon"> Logout
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </header>

    <div class="users-container">
        <h2 class="table-title">Lista de Usuários</h2>
        <table class="users-table">
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Telefone</th>
                    <th>Usuário</th>
                    <th>Senha</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                <% usuarios.forEach(usuario => { %>
                    <tr data-id="<%= usuario.id %>">
                        <td class="edit" data-field="nome"><%= usuario.nome %></td>
                        <td class="edit" data-field="telefone"><%= usuario.telefone %></td>
                        <td class="edit" data-field="usuario"><%= usuario.usuario %></td>
                        <td class="edit" data-field="senha" contenteditable="false">••••••••</td> <!-- Mostra a senha como ocultada -->
                        <td>
                            <button class="edit-button" onclick="enableEdit(this)">
                                <img src="/images/edit.svg" alt="">
                            </button>
                            <button class="save-button" onclick="saveChanges(<%= usuario.id %>)" style="display: none;">Salvar</button>
                            <button class="cancel-button" onclick="cancelEdit(this)" style="display: none;">Cancelar</button>
                            <button class="delete-button" onclick="deleteUser(<%= usuario.id %>)">
                                <img src="/images/delete.svg" alt="">
                            </button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

    <script>
        // Função para habilitar edição na linha correspondente
        function enableEdit(editButton) {
            const row = editButton.closest('tr');
            const saveButton = row.querySelector('.save-button');
            const cancelButton = row.querySelector('.cancel-button');
            const fields = row.querySelectorAll('.edit');

            // Tornar os campos editáveis, incluindo o campo de senha
            fields.forEach(field => {
                field.contentEditable = true;
                if (field.getAttribute('data-field') === 'senha') {
                    field.innerText = ''; // Permite que a senha seja editada
                }
                field.classList.add('editable');
            });

            // Alternar visibilidade dos botões
            editButton.style.display = 'none';
            saveButton.style.display = 'inline';
            cancelButton.style.display = 'inline';
        }

        // Função para salvar as alterações feitas na linha
        function saveChanges(userId) {
            const row = document.querySelector(`tr[data-id='${userId}']`);
            const fields = row.querySelectorAll('.edit');

            // Criar objeto para armazenar os dados atualizados
            const updatedData = {};
            fields.forEach(field => {
                const fieldName = field.getAttribute('data-field');
                const fieldValue = field.innerText.trim();
                updatedData[fieldName] = fieldValue;
            });

            // Enviar os dados atualizados ao servidor via fetch
            fetch(`/gestor/user/edit/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedData)
            })
            .then(response => {
                if (response.ok) {
                    alert('Usuário atualizado com sucesso!');
                } else {
                    alert('Erro ao atualizar usuário.');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao atualizar usuário.');
            })
            .finally(() => {
                // Desabilitar a edição e alternar botões
                fields.forEach(field => {
                    field.contentEditable = false;
                    field.classList.remove('editable');
                    if (field.getAttribute('data-field') === 'senha') {
                        field.innerText = '••••••••'; // Oculta a senha novamente após salvar
                    }
                });
                row.querySelector('.edit-button').style.display = 'inline';
                row.querySelector('.save-button').style.display = 'none';
                row.querySelector('.cancel-button').style.display = 'none';
            });
        }

        // Função para cancelar a edição e restaurar os valores originais
        function cancelEdit(cancelButton) {
            const row = cancelButton.closest('tr');
            const fields = row.querySelectorAll('.edit');

            // Restaurar os valores originais dos campos
            fields.forEach(field => {
                field.innerText = field.getAttribute('data-original-value');
                field.contentEditable = false;
                field.classList.remove('editable');
            });

            // Alternar visibilidade dos botões
            row.querySelector('.edit-button').style.display = 'inline';
            row.querySelector('.save-button').style.display = 'none';
            cancelButton.style.display = 'none';
        }

        // Salvar o valor original quando a página é carregada
        document.addEventListener('DOMContentLoaded', () => {
            const fields = document.querySelectorAll('.edit');
            fields.forEach(field => {
                field.setAttribute('data-original-value', field.innerText);
            });
        });

        // Função para deletar um usuário
        function deleteUser(userId) {
            if (confirm('Deseja realmente excluir este usuário?')) {
                fetch(`/gestor/user/delete/${userId}`, {
                    method: 'DELETE',
                })
                .then(response => {
                    if (response.ok) {
                        alert('Usuário deletado com sucesso!');
                        // Remover a linha da tabela
                        const row = document.querySelector(`tr[data-id='${userId}']`);
                        row.remove();
                    } else {
                        alert('Erro ao deletar usuário.');
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao deletar usuário.');
                });
            }
        }
    </script>
</body>
</html>
